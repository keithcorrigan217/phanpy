html,
body {
  margin: 0;
  padding: 0;
  background-color: var(--bg-color);
  color: var(--text-color);
  /* overflow: hidden; */
}

#app {
  min-height: 100vh;
  min-height: 100dvh;
  display: flex;
  align-items: center;
  justify-content: center;
}

/* MENTIONS */

a.mention {
  text-decoration-line: none;
}
a.mention span {
  text-decoration-line: underline;
  text-decoration-color: inherit;
}
/* a.mention:has(span).hashtag {
  color: var(--link-light-color);
} */
a.mention span {
  color: var(--text-color);
}

.deck-container {
  width: 100%;
  height: 100vh;
  height: 100dvh;
  overflow: auto;
  overflow-x: hidden;
  transition: opacity 0.1s ease-in-out;
}
.deck-container[hidden] {
  display: block;
  position: absolute;
  user-select: none;
  pointer-events: none;
  opacity: 0;
  content-visibility: hidden;
}

.deck-container,
.deck.contained {
  scroll-padding-top: 3em;
}

.deck {
  min-height: 100vh;
  min-height: 100dvh;
  margin: auto;
  width: 40em;
  max-width: 100vw;
  border-left: 1px solid rgba(0, 0, 0, 0.1);
  border-right: 1px solid rgba(0, 0, 0, 0.1);
  background-color: var(--bg-color);
}
.deck.contained {
  overflow: auto;
  overflow-x: hidden;
  height: 100vh;
  height: 100dvh;
}

.deck header {
  min-height: 3em;
  position: sticky;
  top: 0;
  background-color: var(--bg-blur-color);
  backdrop-filter: blur(12px);
  border-bottom: 1px solid var(--divider-color);
  z-index: 1;
  cursor: default;
  z-index: 10;
  display: grid;
  grid-template-columns: 1fr 1fr 1fr;
  align-items: center;
}
.deck header > .header-side:last-of-type {
  text-align: right;
  grid-column: 3;
}
.deck header :is(button, .button).plain {
  backdrop-filter: none;
}
.deck header h1 {
  margin: 0 8px;
  padding: 0;
  font-size: 1.2em;
  text-align: center;
}
.deck header h1:first-child {
  text-align: left;
  padding-left: 8px;
}
.deck h2 {
  font-size: 1.45em;
}
.deck.padded-bottom .timeline > li:last-child {
  padding-bottom: 80vh !important;
  padding-bottom: 80dvh !important;
}

.timeline {
  margin: 0 auto;
  padding: 0;
}
.timeline > li {
  list-style: none;
  margin: 0;
  padding: 0;
  border-bottom: 1px solid var(--divider-color);
}
.timeline.flat > li {
  border-bottom: none;
}

.timeline.contextual > li {
  --width: 3px;
  --left: 40px;
  --right: calc(var(--left) + var(--width));
  background-image: linear-gradient(
    to right,
    transparent,
    transparent var(--left),
    var(--comment-line-color) var(--left),
    var(--comment-line-color) var(--right),
    transparent var(--right),
    transparent
  );
  background-repeat: no-repeat;
  transition: opacity 0.3s ease-in-out;
}
.timeline.contextual > li:first-child {
  background-position: 0 16px;
}
.timeline.contextual > li:last-child {
  background-size: 100% 20px;
}
.timeline.contextual > li.descendant {
  position: relative;
}
.timeline.contextual > li.descendant {
  padding-bottom: 1em;
}
.timeline.contextual > li.descendant:not(.thread) > .status-link {
  padding-left: 40px;
}
.timeline.contextual
  > li.descendant.thread
  > .status-link
  + .replies
  > summary {
  margin-left: calc(50px + 16px + 16px);
}
.timeline.contextual
  > li.descendant.thread
  > .status-link
  + .replies
  .status-link {
  padding-left: calc(50px + 16px + 16px);
}
.timeline.contextual
  > li.descendant:not(.thread)
  > .status-link
  + .replies
  > summary {
  margin-left: calc(40px + 16px);
}
.timeline.contextual
  > li.descendant:not(.thread)
  > .status-link
  + .replies
  .status-link {
  padding-left: calc(40px + 16px);
}
.timeline.contextual > li.descendant:not(.thread):before {
  --radius: 10px;
  --diameter: calc(var(--radius) * 2);
  content: '';
  position: absolute;
  top: 10px;
  left: 40px;
  width: var(--diameter);
  height: var(--diameter);
  border-radius: var(--radius);
  border-style: solid;
  border-width: var(--width);
  border-color: transparent transparent var(--comment-line-color) transparent;
  transform: rotate(45deg);
}
.timeline.contextual > li .replies {
  margin-top: -12px;
}
.timeline.contextual > li .replies :is(ul, li) {
  margin: 0;
  padding: 0;
  list-style: none;
}
.timeline.contextual > li .replies summary {
  padding: 8px 16px;
  background-color: var(--bg-faded-color);
  display: inline-block;
  border-radius: 8px;
  cursor: pointer;
  text-transform: uppercase;
  font-weight: bold;
  font-size: 12px;
  color: var(--text-insignificant-color);
  user-select: none;
  box-shadow: 0 0 0 2px var(--bg-color);
  position: relative;
}
.timeline.contextual > li .replies summary:active,
.timeline.contextual > li .replies[open] summary {
  color: var(--text-color);
  background-color: var(--comment-line-color);
  background-image: linear-gradient(
    to top right,
    var(--comment-line-color),
    var(--bg-faded-color)
  );
}
.timeline.contextual > li .replies[open] summary {
  border-bottom-left-radius: 0;
}
.timeline.contextual > li .replies summary[hidden] {
  display: none;
}
.timeline.contextual > li .replies li {
  position: relative;
}
.timeline.contextual > li .replies li .status {
  --width: 3px;
  --left: 0px;
  --right: calc(var(--left) + var(--width));
  background-image: linear-gradient(
    to right,
    transparent,
    transparent var(--left),
    var(--comment-line-color) var(--left),
    var(--comment-line-color) var(--right),
    transparent var(--right),
    transparent
  );
  background-repeat: no-repeat;
}
.timeline.contextual > li .replies li:last-child .status {
  background-size: 100% 20px;
}
.timeline.contextual > li .replies li:before {
  --radius: 10px;
  --diameter: calc(var(--radius) * 2);
  content: '';
  position: absolute;
  top: 10px;
  left: calc(40px + 16px);
  width: var(--diameter);
  height: var(--diameter);
  border-radius: var(--radius);
  border-style: solid;
  border-width: var(--width);
  border-color: transparent transparent var(--comment-line-color) transparent;
  transform: rotate(45deg);
}
.timeline.contextual > li.thread .replies li:before {
  left: calc(50px + 16px + 16px);
}
.timeline.contextual.loading > li:not(.hero) {
  opacity: 0.5;
  pointer-events: none;
  /* background-image: none !important; */
}
/* .timeline.contextual.loading > li:not(.hero):before {
  content: none !important;
} */

.timeline-deck.compact .status {
  max-height: max(25vh, 160px);
  overflow: hidden;
  mask-image: linear-gradient(
    rgba(0, 0, 0, 1),
    rgba(0, 0, 0, 1) 80%,
    transparent 95%
  );
}
.timeline-deck.compact .status .meta ~ * {
  pointer-events: none;
}

.timeline-header {
  padding: 0 16px;
  opacity: 0.75;
}

.timeline-empty {
  color: var(--text-insignificant-color);
  padding: 0 16px;
  margin-bottom: 3em;
}

.status-loading {
  text-align: center;
  color: var(--text-insignificant-color);
}

.status-link {
  display: block;
  text-decoration-line: none;
  color: inherit;
  transition: background-color 0.2s ease-out;
  -webkit-tap-highlight-color: transparent;
}
.status-link:hover {
  background-color: var(--link-bg-hover-color);
}

.ui-state {
  padding: 16px;
  text-align: center;
}

.deck-backdrop {
  position: fixed;
  top: 0;
  right: 0;
  height: 100%;
  width: 100%;
  z-index: 1000;
  display: flex;
  background-color: var(--backdrop-color);
}
.deck-backdrop > a {
  flex-grow: 1;
  backdrop-filter: saturate(0.75);
}
@keyframes slide-in {
  0% {
    opacity: 0.5;
    transform: translate3d(100%, 0, 0);
  }
  100% {
    opacity: 1;
    transform: translate3d(0, 0, 0);
  }
}
.deck-backdrop .deck {
  width: 40em;
  max-width: 100vw;
  border-left: 1px solid var(--divider-color);
  background-color: var(--bg-color);
  animation: slide-in 0.5s var(--timing-function);
  box-shadow: -1px 0 var(--bg-color);
}
.deck-backdrop .deck .status {
  max-width: 40em;
}

.decks {
  flex-grow: 1;
  transition: transform 0.5s var(--timing-function);
}

.deck-close {
  color: var(--text-insignificant-color) !important;
}
.deck-close:hover {
  color: var(--text-color) !important;
}

:is(button, .button).plain.has-badge:after {
  content: '';
  display: inline-block;
  position: absolute;
  right: 10px;
  width: 4px;
  height: 4px;
  border-radius: 50%;
  background-color: var(--link-color);
  opacity: 0.5;
}

@keyframes fade-from-top {
  0% {
    transform: translate(-50%, -100%);
    opacity: 0;
  }
  100% {
    transform: translate(-50%, 0);
    opacity: 1;
  }
}
.updates-button {
  position: absolute;
  animation: fade-from-top 2s ease-out;
  left: 50%;
  transform: translate(-50%, 0);
  font-size: 90%;
}
.updates-button .icon {
  vertical-align: top;
}

/* BOX */

.box {
  width: 40em;
  max-width: 100vw;
  padding: 16px;
}

/* CAROUSEL */
/* use snap, center children, max width viewport */

.carousel {
  display: flex;
  overflow-x: auto;
  scroll-snap-type: x mandatory;
  /* scroll-behavior: smooth; */
  scrollbar-width: none;
  overscroll-behavior: contain;
}
.carousel::-webkit-scrollbar {
  display: none;
}
.carousel > * {
  scroll-snap-align: center;
  flex-shrink: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100vw;
  height: 100vh;
  height: 100dvh;
}
.carousel > * :is(img, video) {
  width: auto;
  max-width: 100vw;
  height: auto;
  max-height: 100vh;
  max-height: 100dvh;
}
.carousel > * video {
  min-height: 80px;
}

.carousel-top-controls {
  top: 0;
  top: env(safe-area-inset-top, 0);
}
.carousel-controls {
  bottom: 0;
  bottom: env(safe-area-inset-bottom, 0);
}
:is(.carousel-top-controls, .carousel-controls) {
  position: fixed;
  left: 0;
  left: env(safe-area-inset-left, 0);
  right: 0;
  right: env(safe-area-inset-right, 0);
  padding: 16px;
  display: flex;
  gap: 8px;
  justify-content: space-between;
  text-align: center;
  pointer-events: none;
}

button.carousel-button,
button.carousel-dot {
  pointer-events: auto;
  font-weight: bold;
}
button.carousel-button[hidden] {
  display: inline-block;
  opacity: 0;
  pointer-events: none;
}
.carousel-dots {
  border-radius: 999px;
  backdrop-filter: blur(12px) invert(0.25) brightness(1.5);
}
@media (prefers-color-scheme: dark) {
  .carousel-dots {
    backdrop-filter: blur(12px) brightness(0.5);
  }
}
button.carousel-dot {
  color: var(--text-insignificant-color) !important;
  font-weight: bold;
  backdrop-filter: none !important;
}
button.carousel-dot:hover,
button.carousel-dot.active,
button.carousel-dot[disabled].active {
  color: var(--link-color) !important;
}
button.carousel-dot.active,
button.carousel-dot[disabled].active {
  opacity: 1;
  transform: scale(2) translateY(-0.5px);
}
@media (hover: hover) {
  .carousel-top-controls {
    transform: translateY(-100%);
    transition: transform 0.2s ease-in-out;
  }
  .carousel-controls {
    transform: translateY(100%);
    transition: transform 0.2s ease-in-out;
  }
  .carousel:hover + .carousel-top-controls,
  .carousel:hover + .carousel-top-controls + .carousel-controls,
  .carousel-top-controls:hover,
  .carousel-controls:hover,
  .carousel-top-controls:focus-within,
  .carousel-controls:focus-within {
    transform: translateY(0);
  }
}
@media (prefers-color-scheme: dark) {
  .carousel :is(img, video) {
    /* No need fade out if inside carousel */
    filter: none;
  }
}

/* COMPOSE BUTTON */

#compose-button {
  position: fixed;
  bottom: 16px;
  bottom: max(16px, env(safe-area-inset-bottom));
  right: 16px;
  right: max(16px, env(safe-area-inset-right));
  padding: 16px;
  box-shadow: 0 0 32px var(--bg-color);
  z-index: 1;
  border: 1px solid var(--bg-color);
  opacity: 0.75;
}

/* SHEET */

@keyframes slide-up {
  0% {
    transform: translateY(100%);
    opacity: 0;
  }
  100% {
    transform: translateY(0);
    opacity: 1;
  }
}
.sheet {
  align-self: flex-end;
  max-height: 90vh;
  max-height: 90dvh;
  overflow: auto;
  overflow-x: hidden;
  background-color: var(--bg-color);
  width: 100%;
  max-width: calc(40em - 50px - 16px);
  border-radius: 16px 16px 0 0;
  padding: 16px;
  padding-left: max(16px, env(safe-area-inset-left));
  padding-right: max(16px, env(safe-area-inset-right));
  padding-bottom: max(16px, env(safe-area-inset-bottom));
  box-shadow: 0 -1px 32px var(--divider-color);
  animation: slide-up 0.2s var(--timing-function);
  border: 1px solid var(--outline-color);
}

/* TAG */

.tag {
  font-size: smaller;
  color: var(--bg-faded-color);
  background-color: var(--text-insignificant-color);
  padding: 2px 4px;
  border-radius: 4px;
  display: inline-block;
  margin: 4px;
  align-self: center;
}

/* MENU POPUP */

.menu-container {
  position: relative;
}
.menu-container button {
  color: inherit !important;
}
.menu-container button:is(:hover, :active, :focus) {
  background-color: var(--button-plain-bg-hover-color);
}
.menu-container menu {
  position: absolute;
  right: 0;
  top: 0;
  transform: translateY(-100%);
  opacity: 0;
  pointer-events: none;
  padding: 8px 0;
  margin: 0;
  font-size: 16px;
  background-color: var(--bg-color);
  width: 10em;
  list-style: none;
  z-index: 100;
  border: 1px solid var(--outline-color);
  border-radius: 8px;
  transition: all 0.2s ease-in-out;
  box-shadow: 0 0 8px var(--bg-faded-color), 0 4px 8px var(--bg-faded-color),
    0 2px 4px var(--bg-faded-color);
}
.menu-container menu li {
  margin: 0;
  padding: 0;
  list-style: none;
}
.menu-container > button:is(:hover, :active, :focus) + menu,
.menu-container menu:is(:hover, :active) {
  opacity: 1;
  pointer-events: auto;
}
.menu-container menu button {
  width: 100%;
  text-align: left;
  color: var(--text-color) !important;
  border-radius: 0;
}
.menu-container menu button:hover {
  color: var(--bg-color) !important;
  background-color: var(--link-color);
}

@media (min-width: 40em) {
  html,
  body {
    background-color: var(--bg-faded-color);
  }
  #app {
    display: flex;
  }
  .decks:has(~ .deck-backdrop) {
    transform: translate3d(-5vw, 0, 0);
  }
  .deck-backdrop .deck {
    width: 50%;
    min-width: 40em;
  }
  .timeline-deck {
    border: 0;
    background-color: transparent;
  }
  .timeline-deck header {
    min-height: 6em;
    border-bottom: 0;
    background-color: var(--bg-faded-blur-color);
    border-bottom: 0;
    mask-image: linear-gradient(
      rgba(0, 0, 0, 1) 50%,
      rgba(0, 0, 0, 0.7) 80%,
      rgba(0, 0, 0, 0.5) 90%,
      transparent
    );
  }
  .deck header h1 {
    font-size: 1.5em;
  }
  .timeline-deck .timeline:not(.flat) li {
    border: 1px solid var(--divider-color);
    margin: 16px 0;
    background-color: var(--bg-color);
    border-radius: 16px;
    overflow: hidden;
    box-shadow: 0px 1px var(--bg-blur-color);
  }
  .box {
    padding: 32px;
  }
  :is(.carousel-top-controls, .carousel-controls) {
    padding: 32px;
  }
}
