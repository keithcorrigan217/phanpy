name: i18n PR auto-merge

on:
  pull_request:
    types: [opened, synchronize, reopened, labeled]

jobs:
  run-and-merge:
    if: contains(github.event.pull_request.labels.*.name, 'i18n') &&
      github.event.pull_request.base.ref == 'main' &&
      github.event.pull_request.head.ref == 'l10n_main'
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Merge PR if there are significant changes
        run: |
          BASE_SHA="${{ github.event.pull_request.base.sha }}"
          HEAD_SHA="${{ github.event.pull_request.head.sha }}"

          # Debug: Show the base and head SHA
          echo "Base SHA: $BASE_SHA"
          echo "Head SHA: $HEAD_SHA"

          # Check if the commits exist
          if ! git cat-file -e $BASE_SHA || ! git cat-file -e $HEAD_SHA; then
            echo "ERROR: One or both of the commits are not available."
            exit 1
          fi

          # Calculate the total number of lines changed (added, removed, or modified)
          LINES_CHANGED=$(git diff --shortstat $BASE_SHA $HEAD_SHA | awk '{print $4 + $6 + $8}')

          if [ -z "$LINES_CHANGED" ]; then
            LINES_CHANGED=0
          fi

          echo "Total lines changed: $LINES_CHANGED"

          # Check if the number of lines changed is more than 50
          if [ "$LINES_CHANGED" -le 50 ]; then
            echo "ERROR: 50 or fewer lines have been changed. Failing the check."
            exit 0
          else
            echo "Success: More than 50 lines have been changed."
            node scripts/catalogs.js
            if git diff --quiet src/data/catalogs.json; then
              echo "No changes to catalogs.json"
            else
              echo "Changes to catalogs.json"
              git add src/data/catalogs.json
              git commit -m "Update catalogs.json"
              git push
              echo "Merging pull request"
              PR_NUMBER=$(echo ${{ github.event.pull_request.number }})
              gh pr merge $PR_NUMBER --auto --squash
            fi
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
